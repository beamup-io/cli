#!/bin/bash

set -e

cli_args="${@}"
cwd=$(pwd)
cli_dir=$(dirname "$(readlink -f "$0")")

# Setup temp directories
# TODO: Upload to beamup release repository
# instead of outputting to local file system
cache_dir=/tmp/beamup/cache
releases_dir=/tmp/beamup/releases
mkdir -p $cache_dir $releases_dir

# Use the name of the current folder as release name
project_name=$(basename $cwd)

# TODO: Make Erlang version overridable
BEAMUP_ERLANG_VERSION="20.1.2"

cpu_arch=$(uname -m)
case $cpu_arch in
  arm32|armv7|armhfp)
    BEAMUP_TARGET_ARCH=arm32v7
    ;;
  arm64|armv8|aarch64)
    BEAMUP_TARGET_ARCH=arm64v8
    ;;
  *)
    BEAMUP_TARGET_ARCH=amd64
    ;;
esac

image="$BEAMUP_TARGET_ARCH/erlang:$BEAMUP_ERLANG_VERSION"

# Detect if running in a TTY
interactive=""
if [ -t 0 ]; then
  interactive="i"
fi

container () {
  echo "BeamUp booting container $image with command $cli_args for project $project_name"

  docker run --rm \
    --net=host \
    --entrypoint="/host/priv/entrypoint.sh" \
    -v "${cli_dir}/src:/host/src:ro" \
    -v "${cli_dir}/test:/host/test:ro" \
    -v "${cli_dir}/priv:/host/priv:ro" \
    -v "${cli_dir}/commands:/host/commands:ro" \
    -v "${cwd}:/host/project/${project_name}:ro" \
    -v "${cache_dir}:/host/cache/" \
    -v "${cache_dir}/shell:/root/.cache/erlang-history/" \
    -v "${releases_dir}:/host/releases" \
    -e "PROJECT_NAME=${project_name}" \
    -e "BEAMUP_TARGET_ARCH=${BEAMUP_TARGET_ARCH}" \
    -e "BEAMUP_ERLANG_VERSION=${BEAMUP_ERLANG_VERSION}" \
    -${interactive}t $image \
    "$cli_args"
}

version () {
  pushd $cli_dir > /dev/null
  cli_version=$(git rev-list -1 HEAD)
  popd > /dev/null

  image_version=$(docker image ls --format='{{.ID}}' $image)

  echo "BeamUp CLI tool version $cli_version"
  echo "Container image $image version $image_version"
}

update () {
  echo "Checking for updates..."

  pushd "$cli_dir"
  git pull
  popd

  echo "Done."
}

cli_command=$1
if [ -z "$cli_command" ]; then
  echo "usage: beamup build|update|selftest|<script> [--version]"
  exit 1
else
  shift
fi

case $cli_command in
  --version)
    version
    ;;
  update)
    update
    ;;
  *)
    container
    ;;
esac

echo "" # Clean prompt
