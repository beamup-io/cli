#!/bin/bash

set -e

cli_args="${@}"
cwd=$(pwd)
cli_dir=$(dirname "$(readlink -f "$0")")

# Setup temp directories
# TODO: Upload to beamup release repository
# instead of outputting to local file system
cache_dir=/tmp/beamup/cache
releases_dir=/tmp/beamup/releases
mkdir -p $cache_dir $releases_dir

# Use the name of the current folder as release name
project_name=$(basename $cwd)

image=beamup/builder:latest

container () {
  echo "BeamUp booting container $image with command $cli_args for project $project_name"

  docker run --rm \
    --init \
    --net=host \
    --entrypoint="/host/lib/entrypoint.sh" \
    -v "${cli_dir}/src:/host/src:ro" \
    -v "${cli_dir}/lib:/host/lib:ro" \
    -v "${cli_dir}/commands:/host/commands:ro" \
    -v "${cwd}:/host/project/${project_name}:ro" \
    -v "${cache_dir}:/host/cache/" \
    -v "${releases_dir}:/host/releases" \
    -e "PROJECT_NAME=${project_name}" \
    -e "RELEASE_CHANNEL=$1" \
    -t $image \
    "$cli_args"
}

version () {
  pushd $cli_dir > /dev/null
  cli_version=$(git rev-list -1 HEAD)
  popd > /dev/null

  image_version=$(docker image ls --format='{{.ID}}' $image)

  echo "BeamUp CLI tool version $cli_version"
  echo "Container image $image version $image_version"
}

update () {
  echo "Run this to update the BeamUp CLI tool:"
  echo "  cd $cli_dir"
  echo "  git pull"
}

cli_command=$1
if [ -z "$cli_command" ]; then
  echo "usage: beamup build|update|<script> [--version]"
  exit 1
else
  shift
fi

case $cli_command in
  --version)
    version
    ;;
  update)
    update
    ;;
  *)
    container
    ;;
esac

echo "" # Clean prompt
